Algorithm 3 Water Wave Optimization
Purpose: 
Algorithm 3 optimizes the assignment of orders to workers using the Water Wave Optimization (WWO) technique. It starts with a set of initial feasible solutions (generated by Algorithm 2) and iteratively improves them by exploring the solution space, ultimately aiming to find the best possible assignment that maximizes worker profit and minimizes service time. 
Steps of Algorithm 3 (in short): 
1. Initialize: 
o Load initial feasible solutions (P) from a file (generated by Algorithm 2). 
o Select the best solution (X*) from these initial solutions based on a  
o fitness function. 
2. Iterative Improvement: 
o Propagation: For each solution in P, make small random changes (flip assignments) to explore new solutions. 
o Evaluation: Calculate the fitness of the new solutions and compare them with the current best solution. 
o Update: If a better solution is found, update X* and the population P. 
3. Neighborhood Search: 
o Perform additional local searches around the best solution (X*) to further refine it. 
4. Termination: 
o Stop after a set number of iterations (max_iter). 
5. Return Output: 
o The best assignment (X*) found during the optimization process. 
Inputs: 
1. Orders (J): List of order IDs. 
2. Workers (K): List of worker IDs. 
3. Maximum Service Time(max delay tolerance) (s_max): Scalar value for the maximum allowable service time.  
It is calculated in Algorithm 1 because Algorithm 1 deals with determining the actual and estimated service times for orders, which directly relate to s_max. Calculating s_max at this stage ensures that all subsequent algorithms have the necessary information to assess and optimize order assignments based on service time constraints. 
4. Worker Capacity (q_k): Dictionary of maximum carrying capacities equalling 1 for each worker. 
5. Service Times (service_times): Dictionary of actual service times for each order-worker pair.  
Calculated in Algorithm 2 
6. Delivery Costs (costs): Dictionary of delivery costs for each order-worker pair. 
Calculated in Algorithm 1 
Reason: Delivery costs are typically calculated in Algorithm 1 as they are directly related to the actual service times and distances traveled by the workers. 
7. Estimated Profits (estimated_profits): Dictionary of estimated profits for each order-worker pair. 
Calculated in Algorithm 1 
Reason: Estimated profits are calculated in Algorithm 1 by considering the revenue from completing orders minus the delivery costs. 
8. Population Size (P_size): (Optional) Number of initial solutions to generate. 
Calculated in Algorithm 2 
Reason: Population size refers to the number of initial solutions generated in Algorithm 2, which are then optimized in Algorithm 3. 
9. Maximum Iterations (max_iter): (Optional) Maximum number of iterations. 
Output of Algorithm 3: 
* X* (Optimal Assignment): A matrix or dictionary that represents the optimal assignment of orders to workers, maximizing worker profit while minimizing service time within the given constraints. 
 

