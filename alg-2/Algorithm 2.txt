Algorithm 2
1. Purpose 
The purpose of Algorithm 2 is to generate all feasible solutions for assigning a set of delivery orders to a group of workers. Each worker can only handle one order at a time, and each assignment must satisfy a service time constraint (s_max). The algorithm explores all possible assignments, ensuring that each solution meets the constraints, and outputs these solutions in a structured format. 
2. Steps in the Algorithm 
1. Initialize Assignment Matrix: 
o An assignment matrix X[j][k] is initialized, where j represents an order, and k represents a worker. Initially, all values are set to 0, indicating that no assignments have been made. 
2. Generate Feasible Solutions: 
o The algorithm employs a backtracking method to explore all potential assignments of orders to workers. It recursively tries assigning each order to a worker, ensuring that each assignment respects the service time constraint (s_max) and that each worker is assigned to only one order. 
3. Backtracking Process: 
o If an assignment is valid (i.e., the service time is within the allowed limit and the worker is not already assigned to another order), the algorithm proceeds to assign the next order. If all orders are successfully assigned, the current assignment matrix is stored as a feasible solution. If an assignment does not meet the constraints, the algorithm backtracks by unassigning the order and trying the next possible assignment. 
4. Flatten and Store Solutions: 
o Once all feasible solutions are generated, each solution matrix is flattened into a list of lists, where each list represents a row in the matrix. This format is used to store the solutions in a DataFrame. 
5. Save Results to CSV: 
o The final DataFrame, which contains all feasible solutions, is saved to a CSV file. The output file contains blocks of rows, with each block representing a different feasible solution. The first column is the order_id, and the subsequent columns represent the assignment of workers to orders. 
3. Inputs 
* orders_file.csv: Contains a list of order IDs. 
* workers_file.csv: Contains a list of worker IDs. 
* service_times_file.csv: A matrix (stored as a CSV) where each entry represents the service time for a worker-order pair. 
* estimated_profits_file.csv: A matrix (stored as a CSV) where each entry represents the estimated profit for a worker-order pair. 
* s_max: The maximum allowable service time for any worker. 
4. Outputs 
* all_feasible_solutions.csv: A CSV file containing all feasible assignment matrices. Each block of rows in the file represents a feasible solution, with the first column showing the order_id and subsequent columns showing the assignment of workers to orders. 
Summary 
This algorithm systematically explores all possible assignments of orders to workers under given constraints. By employing a backtracking approach, it ensures that every feasible solution is considered. The final output is a comprehensive CSV file containing all feasible solutions, structured in a way that each solution is easy to inspect and analyze. 

